// Generated by Haxe 3.3.0
#ifndef INCLUDED_Std
#define INCLUDED_Std

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Std)



class HXCPP_CLASS_ATTRIBUTES Std_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Std_obj OBJ_;
		Std_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Std")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Std"); }
		static hx::ObjectPtr< Std_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Std_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Std","\x83","\x60","\x3f","\x00"); }

		static Bool is( ::Dynamic v, ::Dynamic t);
		static ::Dynamic is_dyn();

		static  ::Dynamic instance( ::Dynamic value,hx::Class c);
		static ::Dynamic instance_dyn();

		static ::String string( ::Dynamic s);
		static ::Dynamic string_dyn();

		static Int _hx_int(Float x);
		static ::Dynamic _hx_int_dyn();

		static  ::Dynamic parseInt(::String x);
		static ::Dynamic parseInt_dyn();

		static Float parseFloat(::String x);
		static ::Dynamic parseFloat_dyn();

		static Int random(Int x);
		static ::Dynamic random_dyn();

};


#endif /* INCLUDED_Std */ 
