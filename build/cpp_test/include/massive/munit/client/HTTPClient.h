// Generated by Haxe 3.3.0
#ifndef INCLUDED_massive_munit_client_HTTPClient
#define INCLUDED_massive_munit_client_HTTPClient

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_massive_munit_IAdvancedTestResultClient
#include <massive/munit/IAdvancedTestResultClient.h>
#endif
HX_DECLARE_CLASS2(massive,munit,IAdvancedTestResultClient)
HX_DECLARE_CLASS2(massive,munit,ITestResultClient)
HX_DECLARE_CLASS2(massive,munit,TestResult)
HX_DECLARE_CLASS3(massive,munit,client,HTTPClient)
HX_DECLARE_CLASS3(massive,munit,client,URLRequest)

namespace massive{
namespace munit{
namespace client{


class HXCPP_CLASS_ATTRIBUTES HTTPClient_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef HTTPClient_obj OBJ_;
		HTTPClient_obj();

	public:
		void __construct(::Dynamic client,::String __o_url, ::Dynamic __o_queueRequest);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="massive.munit.client.HTTPClient")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"massive.munit.client.HTTPClient"); }
		static hx::ObjectPtr< HTTPClient_obj > __new(::Dynamic client,::String __o_url, ::Dynamic __o_queueRequest);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~HTTPClient_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("HTTPClient","\xf3","\xf7","\x4e","\x4e"); }

		static void __boot();
		static ::Array< ::Dynamic> queue;
		static Bool responsePending;
		static void dispatchNextRequest();
		static ::Dynamic dispatchNextRequest_dyn();

		::String id;
		 ::Dynamic completionHandler;
		 ::Dynamic &completionHandler_dyn() { return completionHandler;}
		 ::Dynamic get_completionHandler();
		::Dynamic get_completionHandler_dyn();

		 ::Dynamic set_completionHandler( ::Dynamic value);
		::Dynamic set_completionHandler_dyn();

		::Dynamic client;
		::String url;
		 ::massive::munit::client::URLRequest request;
		Bool queueRequest;
		void setCurrentTestClass(::String className);
		::Dynamic setCurrentTestClass_dyn();

		void addPass( ::massive::munit::TestResult result);
		::Dynamic addPass_dyn();

		void addFail( ::massive::munit::TestResult result);
		::Dynamic addFail_dyn();

		void addError( ::massive::munit::TestResult result);
		::Dynamic addError_dyn();

		void addIgnore( ::massive::munit::TestResult result);
		::Dynamic addIgnore_dyn();

		 ::Dynamic reportFinalStatistics(Int testCount,Int passCount,Int failCount,Int errorCount,Int ignoreCount,Float time);
		::Dynamic reportFinalStatistics_dyn();

		void sendResult( ::Dynamic result);
		::Dynamic sendResult_dyn();

		::String platform();
		::Dynamic platform_dyn();

		void onData(::String data);
		::Dynamic onData_dyn();

		void onError(::String msg);
		::Dynamic onError_dyn();

};

} // end namespace massive
} // end namespace munit
} // end namespace client

#endif /* INCLUDED_massive_munit_client_HTTPClient */ 
