// Generated by Haxe 3.3.0
#ifndef INCLUDED_massive_munit_client_RichPrintClient
#define INCLUDED_massive_munit_client_RichPrintClient

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_massive_munit_client_PrintClientBase
#include <massive/munit/client/PrintClientBase.h>
#endif
HX_DECLARE_CLASS2(massive,munit,IAdvancedTestResultClient)
HX_DECLARE_CLASS2(massive,munit,ICoverageTestResultClient)
HX_DECLARE_CLASS2(massive,munit,ITestResultClient)
HX_DECLARE_CLASS2(massive,munit,TestResult)
HX_DECLARE_CLASS2(massive,munit,TestResultType)
HX_DECLARE_CLASS3(massive,munit,client,AbstractTestResultClient)
HX_DECLARE_CLASS3(massive,munit,client,ExternalPrintClient)
HX_DECLARE_CLASS3(massive,munit,client,PrintClientBase)
HX_DECLARE_CLASS3(massive,munit,client,RichPrintClient)

namespace massive{
namespace munit{
namespace client{


class HXCPP_CLASS_ATTRIBUTES RichPrintClient_obj : public  ::massive::munit::client::PrintClientBase_obj
{
	public:
		typedef  ::massive::munit::client::PrintClientBase_obj super;
		typedef RichPrintClient_obj OBJ_;
		RichPrintClient_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="massive.munit.client.RichPrintClient")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"massive.munit.client.RichPrintClient"); }
		static hx::ObjectPtr< RichPrintClient_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~RichPrintClient_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("RichPrintClient","\x7c","\x7d","\xdf","\x56"); }

		static void __boot();
		static ::String DEFAULT_ID;
		::hx::EnumBase testClassResultType;
		::Dynamic external;
		void init();

		void initializeTestClass();

		void updateTestClass( ::massive::munit::TestResult result);

		::String serializeTestResult( ::massive::munit::TestResult result);
		::Dynamic serializeTestResult_dyn();

		void finalizeTestClass();

		::hx::EnumBase getTestClassResultType();
		::Dynamic getTestClassResultType_dyn();

		void setCurrentTestClassCoverage( ::Dynamic result);

		void reportFinalCoverage( ::Dynamic percent,::Array< ::Dynamic> missingCoverageResults,::String summary,::String classBreakdown,::String packageBreakdown,::String executionFrequency);

		::String trim(::String output);
		::Dynamic trim_dyn();

		void printMissingCoverage(::Array< ::Dynamic> missingCoverageResults);
		::Dynamic printMissingCoverage_dyn();

		void printReports();

		void printFinalStatistics(Bool result,Int testCount,Int passCount,Int failCount,Int errorCount,Int ignoreCount,Float time);

		void printOverallResult(Bool result);

		void customTrace( ::Dynamic value, ::Dynamic info);
		::Dynamic customTrace_dyn();

		void print( ::Dynamic value);

		void printLine( ::Dynamic value, ::Dynamic indent);

};

} // end namespace massive
} // end namespace munit
} // end namespace client

#endif /* INCLUDED_massive_munit_client_RichPrintClient */ 
